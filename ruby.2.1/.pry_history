puts "hoge"
? puts
?
n{ i=0;j=1;n.times{j=i+i=j;i }.call(10)
  n{ i=0;j=1;n.times{j=i+i=j;i }.call(10)
n{ i=0;j=1;n.times{j=i+i=j};i }.call(10)
n
quit
n{ i=0;j=1;n.times{j=i+i=j;i }.call(10)
}
n{ i=0;j=1;n.times{j=i+i=j};i }.call(10)
def foo
quit
quir
quit
queen = 12
queen
QUEEN = 42
QUEEN
Queen = 12
Queen
KING = 13
KING = 42
TEAPOT = "tea".freez
TEAPOT = "tea".freeze
TEAPOT.capitalize!
TEAPOT = "coffee"
TEAPOT.capitalize!
42
-42
42_000_000
0b101010
052
0x2A
4.2
42e-1
42e-2
42e+2
42e+40
42e
42e+10
1/3r
1/3r * 3
42i
5+42i
42ri
"Alice found a bottle"
'Alice found a battle'
"Alice"
"#{name} found a bottle"
name = "Alice"
"#{name} found a bottle"
'#{name} found a bottle'
%!Alice found a bottle!
%Q{Alice found a bottle}
%q{Alice found a bottle}
<<EOS
Alice found a bottle
labeld "drink me!"
EOS
<<-EOS
Alice gound a bottle
labeld "drink me!"
EOS
<<-EOS
Alice gound a bottle
labeld "drink me!"
  EOS
<<EOS
labeld "drink me!"
  EOS
EOS
:alice
:"alice"
:'alice'
%s{alice}
alice.object_id
alice
:alice.object_id
:"alice".object_id
:'alice'.object_id
teapot = "tea"
teapot = 42
teapot
x, y ,z = 1, 2, 3
x
y
z
x, y = 1, 2, 3
x
y
x = 51
x+
x
x = 51
x += 1
x
quit
array = []
array = Array.new
array.push(1)
array << 2
array << "3"
array.kength
array.length
array.size
array[0]
array[1]
array[2]
array[3]
array.at(2)
array.at(-12)
array.at(-2)
array[1..2]
array.at(1..2)
array.delete(1)
array
array.derele_at(0)
array.delete_at(0)
array
array.clear
stack = []
stack.push("alice")
stack.push("in")
stack.push("wonderland")
stack.pop
stack
stack.pop
stack
queue = []
queue.push("alice")
queue.push("in")
queue.push("wonderland")
queue.shift
queue
queue.shift
array = 1..3
array
array = [1,2,3,4]
array.reverse
array
array.reverse!
array
array.reverse!
array.push(5)
array << 6
array.pop
array.rotate(2)
array.rotate(-2)
array
array.rotate(-2)
[1,5,3,2,0,-5],sort_by
[1,5,3,2,0,-5].sort_by
array = [1,5,3,2,0,-5]
array.sort_by
array.sort_by!
array
array.sort_by
array.sort
array.sort!
array
sort_bt
sort_by
array.sort_by
array = ["queen", "of", "hearts"]
array.shuffle
[1,2,3,4,5].sample(2)
[1,2,3,4,5].sample(3)
[1,2,3,4,5].sample(1)
array = [1,2,3,4,5,6]
array.index(3)
array.rindex(3)
array = [1,2,3,3,4,5,6]
array.rindex(3)
array.index(3)
array.index(10)
array = [1,1,2,2,3,3,4,4,4,4]
array.uniq
array
array.uniq
array.uniq!
array.uniq
array.uniq!
array = ["alice", "in", nil, "wonderland", nil].compact
array = ["alice", "in", nil, "wonderland", nil]
array.compact
array = ["alice", "in", nil, "wonderland", nil].compact!
array = ["alice", "in", nil, "wonderland", nil]
array.compact
array.compact!
array1 = ["queen", "of"]
array2 = ["hearts"]
array1.concat(array2)
array1
array1 = [:a, :b, :c]
array2 = [:x, :y]
array3 = [:p, :q, :r, :s]
array1.zip(array2, array3)
histpry
history
hash = {"jack" => 11, "queen" => 12, :king => 13}
hash.length
hash.size
hash["queen"]
hash[:queen]
hash[:king]
hash["jack"]
hash[:ace]
hash.keys
hash.values
hash[:ace] = 1
hash
hash[:ace]
hash.delete[:jack]
hash.delete["jack"]
hash.delete([:jack])
hash.delete(["jack"])
hash
hash.delete(:jack)
hash.delete("jack")
hash
hash.clear
hash
hash = {}
hash = Hash.new
{:jack => 11, :queen => 12, :king = 13}
{:jack => 11, :queen => 12, :king => 13}
{jack: 11, queen: 12, king: 13}
hash = Hash.new(:default)
hash[:ace]
{jack: 11, queen: 12, king: 13}.to_a
{jack: 11, queen: 12, king: 13}.flatten
{jack: 11, queen: 12, king: 13}.merge({ace: 1, king:14, joker: 15})
{jack: 11, queen: 12, king: 13}.invert
hist
Pry.config.history.file
quit
1..5
1...5
touch 12.range.rb
quit
Range.new(1,3)
Range.new(1, 3, true)
(1..5).size
(1...5).size
(1..Float::INFINITY).size
(-Float::INFINITY..Float::INFINITY).size
quit
'a'.succ
'$'.succ
'0'.succ
'„ÅÇ'.succ
'aa'.succ
'az'.succ
(0..5).include(5)
(0..5).include?(5)
(0...5).include?(5)
('a'..'z').include?('alice')
('a'..'z').cover?('alice')
('a'..'z').cover?('zzz')
(1..5).first
(1...5).first
(1...5).first(2)
(1..5).last
(1...5).last
(1...5).last(2)
(0..10).step(3) {|i| puts i}
(0..10).step {|i| puts i}
quit
